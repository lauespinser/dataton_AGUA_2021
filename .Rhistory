tem2$tipo_de_vehiculo_2 == "TAXI" | tem2$tipo_de_vehiculo_2 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_2 == "MICROBUS" |
tem2$tipo_de_vehiculo_2 == "METROBUS" | tem2$tipo_de_vehiculo_2 == "TROLEBUS" |
tem2$tipo_de_vehiculo_3 == "BICICLETA" | tem2$tipo_de_vehiculo_3 == "MONOPATIN" | tem2$tipo_de_vehiculo_3 == "MOTOCICLETA"|
tem2$tipo_de_vehiculo_3 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_3 == "CAMIONETA" | tem2$tipo_de_vehiculo_3 == "CAMION DE CARGA"|
tem2$tipo_de_vehiculo_3 == "TAXI" | tem2$tipo_de_vehiculo_3 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_3 == "MICROBUS" |
tem2$tipo_de_vehiculo_3 == "METROBUS" | tem2$tipo_de_vehiculo_3 == "TROLEBUS") & (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "VOLCADURA" |tem2$tipo_de_evento == "ATROPELLADO" ) & tem2$peaton_lesionado >= 1, TRUE, FALSE )))))
names(tem)
## Validación de personas leisonadas por tipo de evento y  usuario de la vía y tipo de vehículo
tem2 <- ssc%>%filter(total_lesionados >0)
tem2 <- ssc[, c(4,7,23,24,62,64,66,68,70)]
names(tem2)
## Validación de personas leisonadas por tipo de evento y  usuario de la vía y tipo de vehículo
tem2 <- ssc%>%filter(total_lesionados >0)
tem2 <- ssc[, c(4,7,22,23,24,62,64,66,68,70)]
names(tem2)
## Validación de perosnas fallecidas por tipo de evento y  usuario de la vía y tipo de vehículo
tem <- ssc%>%filter(total_occisos > 0)
tem <- tem[ c(4,7,23,24,63,65,67,69,71)]
names(tem)
## Validación de personas leisonadas por tipo de evento y  usuario de la vía y tipo de vehículo
tem2 <- ssc%>%filter(total_lesionados >0)
tem2 <- ssc[, c(4,7,22,23,24,64,66,68,70)]
names(tem2)
names(ssc)
## Validación de personas leisonadas por tipo de evento y  usuario de la vía y tipo de vehículo
tem2 <- ssc%>%filter(total_lesionados >0)
tem2 <- ssc[, c(4,7,22,23,24,64,66,68,70,72)]
names(temp2)
## Validación de personas leisonadas por tipo de evento y  usuario de la vía y tipo de vehículo
tem2 <- ssc%>%filter(total_lesionados >0)
tem2 <- ssc[, c(4,7,22,23,24,64,66,68,70,72)]
names(tem2)
tem2$validacion <- ifelse( (tem2$tipo_de_vehiculo_1 == "MOTOCICLETA" |  tem2$tipo_de_vehiculo_2 == "MOTOCICLETA" |
tem2$tipo_de_vehiculo_3 == "MOTOCICLETA")& (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "DERRAPADO" |tem2$tipo_de_evento == "ATROPELLADO" ) & tem2$motociclista_lesionado >=1, TRUE ,
ifelse( (tem2$tipo_de_vehiculo_1 == "BICICLETA" |  tem2$tipo_de_vehiculo_2 == "BICICLETA" |
tem2$tipo_de_vehiculo_3 == "BICICLETA")&  (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "CAIDA DE CICLISTA" |tem2$tipo_de_evento == "ATROPELLADO" ) & tem2$ciclista_lesionado >=1, TRUE ,
ifelse( (tem2$tipo_de_vehiculo_1 == "CAMIONETA" | tem2$tipo_de_vehiculo_1 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_1 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_1 == "TAXI" |
tem2$tipo_de_vehiculo_1 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" |
tem2$tipo_de_vehiculo_1 == "METROBUS" | tem2$tipo_de_vehiculo_1 == "TROLEBUS" |
tem2$tipo_de_vehiculo_2 == "CAMIONETA" | tem2$tipo_de_vehiculo_2 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_2 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_2 == "TAXI" |
tem2$tipo_de_vehiculo_2 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" | tem2$tipo_de_vehiculo_2 == "MONOPATIN" |
tem2$tipo_de_vehiculo_2 == "METROBUS" | tem2$tipo_de_vehiculo_2 == "TROLEBUS" |
tem2$tipo_de_vehiculo_3 == "CAMIONETA" | tem2$tipo_de_vehiculo_3 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_3 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_3 == "TAXI" |
tem2$tipo_de_vehiculo_3 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_3 == "MICROBUS" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" |
tem2$tipo_de_vehiculo_3 == "METROBUS" | tem2$tipo_de_vehiculo_3 == "TROLEBUS"  )&  (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "VOLCADURA") & tem2$conductor_lesionado >= 1, TRUE,
ifelse( (tem2$tipo_de_vehiculo_1 == "CAMIONETA" | tem2$tipo_de_vehiculo_1 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_1 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_1 == "TAXI" |  tem2$tipo_de_vehiculo_1 == "MOTOCICLETA"|
tem2$tipo_de_vehiculo_1 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" |
tem2$tipo_de_vehiculo_1 == "METROBUS" | tem2$tipo_de_vehiculo_1 == "TROLEBUS" |  tem2$tipo_de_vehiculo_2 == "MOTOCICLETA" |
tem2$tipo_de_vehiculo_2 == "CAMIONETA" | tem2$tipo_de_vehiculo_2 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_2 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_2 == "TAXI" |
tem2$tipo_de_vehiculo_2 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" | tem2$tipo_de_vehiculo_2 == "MONOPATIN" |
tem2$tipo_de_vehiculo_2 == "METROBUS" | tem2$tipo_de_vehiculo_2 == "TROLEBUS" |
tem2$tipo_de_vehiculo_3 == "CAMIONETA" | tem2$tipo_de_vehiculo_3 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_3 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_3 == "TAXI" |
tem2$tipo_de_vehiculo_3 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_3 == "MICROBUS" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" |
tem2$tipo_de_vehiculo_3 == "METROBUS" | tem2$tipo_de_vehiculo_3 == "TROLEBUS" | tem2$tipo_de_vehiculo_3 == "MOTOCICLETA" )&(tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "VOLCADURA" |tem2$tipo_de_evento == "DERRAPADO" |tem2$tipo_de_evento == "CAIDA DE PASAJERO" ) & tem2$pasajero_lesionado >= 1,TRUE,
ifelse( (tem2$tipo_de_vehiculo_1 == "BICICLETA" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" | tem2$tipo_de_vehiculo_1 == "MOTOCICLETA"|## Validación Peatón
tem2$tipo_de_vehiculo_1 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_1 == "CAMIONETA" | tem2$tipo_de_vehiculo_1 == "CAMION DE CARGA"|
tem2$tipo_de_vehiculo_1 == "TAXI" | tem2$tipo_de_vehiculo_1 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" |
tem2$tipo_de_vehiculo_1 == "METROBUS" | tem2$tipo_de_vehiculo_1 == "TROLEBUS" |
tem2$tipo_de_vehiculo_2 == "BICICLETA" | tem2$tipo_de_vehiculo_2 == "MONOPATIN" | tem2$tipo_de_vehiculo_2 == "MOTOCICLETA"|
tem2$tipo_de_vehiculo_2 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_2 == "CAMIONETA" | tem2$tipo_de_vehiculo_2 == "CAMION DE CARGA"|
tem2$tipo_de_vehiculo_2 == "TAXI" | tem2$tipo_de_vehiculo_2 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_2 == "MICROBUS" |
tem2$tipo_de_vehiculo_2 == "METROBUS" | tem2$tipo_de_vehiculo_2 == "TROLEBUS" |
tem2$tipo_de_vehiculo_3 == "BICICLETA" | tem2$tipo_de_vehiculo_3 == "MONOPATIN" | tem2$tipo_de_vehiculo_3 == "MOTOCICLETA"|
tem2$tipo_de_vehiculo_3 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_3 == "CAMIONETA" | tem2$tipo_de_vehiculo_3 == "CAMION DE CARGA"|
tem2$tipo_de_vehiculo_3 == "TAXI" | tem2$tipo_de_vehiculo_3 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_3 == "MICROBUS" |
tem2$tipo_de_vehiculo_3 == "METROBUS" | tem2$tipo_de_vehiculo_3 == "TROLEBUS") & (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "VOLCADURA" |tem2$tipo_de_evento == "ATROPELLADO" ) & tem2$peaton_lesionado >= 1, TRUE, FALSE )))))
## Validación de personas leisonadas por tipo de evento y  usuario de la vía y tipo de vehículo
tem2 <- ssc%>%filter(total_lesionados >0)
tem2 <- ssc[, c(4,7,22,23,24,64,66,68,70,72)]
tem2$validacion <- ifelse( (tem2$tipo_de_vehiculo_1 == "MOTOCICLETA" |  tem2$tipo_de_vehiculo_2 == "MOTOCICLETA" |
tem2$tipo_de_vehiculo_3 == "MOTOCICLETA")& (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "DERRAPADO" |tem2$tipo_de_evento == "ATROPELLADO" ) & tem2$motociclista_lesionado >=1, TRUE ,
ifelse( (tem2$tipo_de_vehiculo_1 == "BICICLETA" |  tem2$tipo_de_vehiculo_2 == "BICICLETA" |
tem2$tipo_de_vehiculo_3 == "BICICLETA")&  (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "CAIDA DE CICLISTA" |tem2$tipo_de_evento == "ATROPELLADO" ) & tem2$ciclista_lesionado >=1, TRUE ,
ifelse( (tem2$tipo_de_vehiculo_1 == "CAMIONETA" | tem2$tipo_de_vehiculo_1 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_1 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_1 == "TAXI" |
tem2$tipo_de_vehiculo_1 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" |
tem2$tipo_de_vehiculo_1 == "METROBUS" | tem2$tipo_de_vehiculo_1 == "TROLEBUS" |
tem2$tipo_de_vehiculo_2 == "CAMIONETA" | tem2$tipo_de_vehiculo_2 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_2 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_2 == "TAXI" |
tem2$tipo_de_vehiculo_2 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" | tem2$tipo_de_vehiculo_2 == "MONOPATIN" |
tem2$tipo_de_vehiculo_2 == "METROBUS" | tem2$tipo_de_vehiculo_2 == "TROLEBUS" |
tem2$tipo_de_vehiculo_3 == "CAMIONETA" | tem2$tipo_de_vehiculo_3 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_3 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_3 == "TAXI" |
tem2$tipo_de_vehiculo_3 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_3 == "MICROBUS" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" |
tem2$tipo_de_vehiculo_3 == "METROBUS" | tem2$tipo_de_vehiculo_3 == "TROLEBUS"  )&  (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "VOLCADURA") & tem2$conductor_lesionado >= 1, TRUE,
ifelse( (tem2$tipo_de_vehiculo_1 == "CAMIONETA" | tem2$tipo_de_vehiculo_1 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_1 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_1 == "TAXI" |  tem2$tipo_de_vehiculo_1 == "MOTOCICLETA"|
tem2$tipo_de_vehiculo_1 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" |
tem2$tipo_de_vehiculo_1 == "METROBUS" | tem2$tipo_de_vehiculo_1 == "TROLEBUS" |  tem2$tipo_de_vehiculo_2 == "MOTOCICLETA" |
tem2$tipo_de_vehiculo_2 == "CAMIONETA" | tem2$tipo_de_vehiculo_2 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_2 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_2 == "TAXI" |
tem2$tipo_de_vehiculo_2 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" | tem2$tipo_de_vehiculo_2 == "MONOPATIN" |
tem2$tipo_de_vehiculo_2 == "METROBUS" | tem2$tipo_de_vehiculo_2 == "TROLEBUS" |
tem2$tipo_de_vehiculo_3 == "CAMIONETA" | tem2$tipo_de_vehiculo_3 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_3 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_3 == "TAXI" |
tem2$tipo_de_vehiculo_3 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_3 == "MICROBUS" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" |
tem2$tipo_de_vehiculo_3 == "METROBUS" | tem2$tipo_de_vehiculo_3 == "TROLEBUS" | tem2$tipo_de_vehiculo_3 == "MOTOCICLETA" )&(tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "VOLCADURA" |tem2$tipo_de_evento == "DERRAPADO" |tem2$tipo_de_evento == "CAIDA DE PASAJERO" ) & tem2$pasajero_lesionado >= 1,TRUE,
ifelse( (tem2$tipo_de_vehiculo_1 == "BICICLETA" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" | tem2$tipo_de_vehiculo_1 == "MOTOCICLETA"|## Validación Peatón
tem2$tipo_de_vehiculo_1 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_1 == "CAMIONETA" | tem2$tipo_de_vehiculo_1 == "CAMION DE CARGA"|
tem2$tipo_de_vehiculo_1 == "TAXI" | tem2$tipo_de_vehiculo_1 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" |
tem2$tipo_de_vehiculo_1 == "METROBUS" | tem2$tipo_de_vehiculo_1 == "TROLEBUS" |
tem2$tipo_de_vehiculo_2 == "BICICLETA" | tem2$tipo_de_vehiculo_2 == "MONOPATIN" | tem2$tipo_de_vehiculo_2 == "MOTOCICLETA"|
tem2$tipo_de_vehiculo_2 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_2 == "CAMIONETA" | tem2$tipo_de_vehiculo_2 == "CAMION DE CARGA"|
tem2$tipo_de_vehiculo_2 == "TAXI" | tem2$tipo_de_vehiculo_2 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_2 == "MICROBUS" |
tem2$tipo_de_vehiculo_2 == "METROBUS" | tem2$tipo_de_vehiculo_2 == "TROLEBUS" |
tem2$tipo_de_vehiculo_3 == "BICICLETA" | tem2$tipo_de_vehiculo_3 == "MONOPATIN" | tem2$tipo_de_vehiculo_3 == "MOTOCICLETA"|
tem2$tipo_de_vehiculo_3 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_3 == "CAMIONETA" | tem2$tipo_de_vehiculo_3 == "CAMION DE CARGA"|
tem2$tipo_de_vehiculo_3 == "TAXI" | tem2$tipo_de_vehiculo_3 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_3 == "MICROBUS" |
tem2$tipo_de_vehiculo_3 == "METROBUS" | tem2$tipo_de_vehiculo_3 == "TROLEBUS") & (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "VOLCADURA" |tem2$tipo_de_evento == "ATROPELLADO" ) & tem2$peaton_lesionado >= 1, TRUE, FALSE )))))
## Validación de personas leisonadas por tipo de evento y  usuario de la vía y tipo de vehículo
tem2 <- ssc%>%filter(total_lesionados >0)
tem2 <- tem2[, c(4,7,22,23,24,64,66,68,70,72)]
tem2$validacion <- ifelse( (tem2$tipo_de_vehiculo_1 == "MOTOCICLETA" |  tem2$tipo_de_vehiculo_2 == "MOTOCICLETA" |
tem2$tipo_de_vehiculo_3 == "MOTOCICLETA")& (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "DERRAPADO" |tem2$tipo_de_evento == "ATROPELLADO" ) & tem2$motociclista_lesionado >=1, TRUE ,
ifelse( (tem2$tipo_de_vehiculo_1 == "BICICLETA" |  tem2$tipo_de_vehiculo_2 == "BICICLETA" |
tem2$tipo_de_vehiculo_3 == "BICICLETA")&  (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "CAIDA DE CICLISTA" |tem2$tipo_de_evento == "ATROPELLADO" ) & tem2$ciclista_lesionado >=1, TRUE ,
ifelse( (tem2$tipo_de_vehiculo_1 == "CAMIONETA" | tem2$tipo_de_vehiculo_1 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_1 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_1 == "TAXI" |
tem2$tipo_de_vehiculo_1 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" |
tem2$tipo_de_vehiculo_1 == "METROBUS" | tem2$tipo_de_vehiculo_1 == "TROLEBUS" |
tem2$tipo_de_vehiculo_2 == "CAMIONETA" | tem2$tipo_de_vehiculo_2 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_2 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_2 == "TAXI" |
tem2$tipo_de_vehiculo_2 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" | tem2$tipo_de_vehiculo_2 == "MONOPATIN" |
tem2$tipo_de_vehiculo_2 == "METROBUS" | tem2$tipo_de_vehiculo_2 == "TROLEBUS" |
tem2$tipo_de_vehiculo_3 == "CAMIONETA" | tem2$tipo_de_vehiculo_3 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_3 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_3 == "TAXI" |
tem2$tipo_de_vehiculo_3 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_3 == "MICROBUS" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" |
tem2$tipo_de_vehiculo_3 == "METROBUS" | tem2$tipo_de_vehiculo_3 == "TROLEBUS"  )&  (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "VOLCADURA") & tem2$conductor_lesionado >= 1, TRUE,
ifelse( (tem2$tipo_de_vehiculo_1 == "CAMIONETA" | tem2$tipo_de_vehiculo_1 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_1 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_1 == "TAXI" |  tem2$tipo_de_vehiculo_1 == "MOTOCICLETA"|
tem2$tipo_de_vehiculo_1 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" |
tem2$tipo_de_vehiculo_1 == "METROBUS" | tem2$tipo_de_vehiculo_1 == "TROLEBUS" |  tem2$tipo_de_vehiculo_2 == "MOTOCICLETA" |
tem2$tipo_de_vehiculo_2 == "CAMIONETA" | tem2$tipo_de_vehiculo_2 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_2 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_2 == "TAXI" |
tem2$tipo_de_vehiculo_2 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" | tem2$tipo_de_vehiculo_2 == "MONOPATIN" |
tem2$tipo_de_vehiculo_2 == "METROBUS" | tem2$tipo_de_vehiculo_2 == "TROLEBUS" |
tem2$tipo_de_vehiculo_3 == "CAMIONETA" | tem2$tipo_de_vehiculo_3 == "CAMION DE CARGA" |
tem2$tipo_de_vehiculo_3 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_3 == "TAXI" |
tem2$tipo_de_vehiculo_3 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_3 == "MICROBUS" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" |
tem2$tipo_de_vehiculo_3 == "METROBUS" | tem2$tipo_de_vehiculo_3 == "TROLEBUS" | tem2$tipo_de_vehiculo_3 == "MOTOCICLETA" )&(tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "VOLCADURA" |tem2$tipo_de_evento == "DERRAPADO" |tem2$tipo_de_evento == "CAIDA DE PASAJERO" ) & tem2$pasajero_lesionado >= 1,TRUE,
ifelse( (tem2$tipo_de_vehiculo_1 == "BICICLETA" | tem2$tipo_de_vehiculo_1 == "MONOPATIN" | tem2$tipo_de_vehiculo_1 == "MOTOCICLETA"|## Validación Peatón
tem2$tipo_de_vehiculo_1 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_1 == "CAMIONETA" | tem2$tipo_de_vehiculo_1 == "CAMION DE CARGA"|
tem2$tipo_de_vehiculo_1 == "TAXI" | tem2$tipo_de_vehiculo_1 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_1 == "MICROBUS" |
tem2$tipo_de_vehiculo_1 == "METROBUS" | tem2$tipo_de_vehiculo_1 == "TROLEBUS" |
tem2$tipo_de_vehiculo_2 == "BICICLETA" | tem2$tipo_de_vehiculo_2 == "MONOPATIN" | tem2$tipo_de_vehiculo_2 == "MOTOCICLETA"|
tem2$tipo_de_vehiculo_2 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_2 == "CAMIONETA" | tem2$tipo_de_vehiculo_2 == "CAMION DE CARGA"|
tem2$tipo_de_vehiculo_2 == "TAXI" | tem2$tipo_de_vehiculo_2 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_2 == "MICROBUS" |
tem2$tipo_de_vehiculo_2 == "METROBUS" | tem2$tipo_de_vehiculo_2 == "TROLEBUS" |
tem2$tipo_de_vehiculo_3 == "BICICLETA" | tem2$tipo_de_vehiculo_3 == "MONOPATIN" | tem2$tipo_de_vehiculo_3 == "MOTOCICLETA"|
tem2$tipo_de_vehiculo_3 == "AUTOMOVIL" | tem2$tipo_de_vehiculo_3 == "CAMIONETA" | tem2$tipo_de_vehiculo_3 == "CAMION DE CARGA"|
tem2$tipo_de_vehiculo_3 == "TAXI" | tem2$tipo_de_vehiculo_3 == "AUTOBUS DE PASAJEROS" | tem2$tipo_de_vehiculo_3 == "MICROBUS" |
tem2$tipo_de_vehiculo_3 == "METROBUS" | tem2$tipo_de_vehiculo_3 == "TROLEBUS") & (tem2$tipo_de_evento == "CHOQUE" |tem2$tipo_de_evento == "VOLCADURA" |tem2$tipo_de_evento == "ATROPELLADO" ) & tem2$peaton_lesionado >= 1, TRUE, FALSE )))))
View(tem2)
library(data.table)
### Carga de librer?as
library(tidyverse)
library(readxl)
library(stringi)
library(stringr)
library(janitor)
library(reshape2)
library(WriteXLS)
library(validate)
library(data.table)
library(lubridate)
library(enc)
library(splitstackshape)
library(hms)
### Carga la base de datos------------------------------------------------------
fgj <- fread("/home/jfractal/Documentos/SEMOVI/bases de datos/FGJ/2021/fgj_enero_junio_2021_.csv")
fgj <- clean_names(fgj)
unique(fgj$hora_de_hechos)
fgj <- read_xlsx("/home/jfractal/Documentos/SEMOVI/bases de datos/FGJ/2021/4.FGJ_Abril2021.xlsx")
fgj <- read_xlsx("/home/jfractal/Documentos/SEMOVI/bases de datos/FGJ/2021/4.FGJ_Abril2021.xlsx". skip = 5)
fgj <- read_xlsx("/home/jfractal/Documentos/SEMOVI/bases de datos/FGJ/2021/4.FGJ_Abril2021.xlsx", skip = 5)
View(fgj)
unique(fgj$`HORA DE HECHOS`)
fgj$`HORA DE HECHOS` <- ifelse(substring(fgj$`HORA DE HECHOS`,1,2)=="9.",
format(as.POSIXct((as.numeric(fgj$`HORA DE HECHOS`)) * 86400,
origin = "1970-01-01", tz = "UTC"), "%H:%M:%S"), fgj$`HORA DE HECHOS`)
unique(fgj$hora_de_hechos)
unique(fgj$`HORA DE HECHOS`)
fgj$`HORA DE HECHOS` <- ifelse(substring(fgj$`HORA DE HECHOS`,1,2)=="9.",
format(as.POSIXct((as.numeric(fgj$`HORA DE HECHOS`)) * 86400,
origin = "1970-01-01", tz = "UTC"), "%H:%M:%S"), fgj$`HORA DE HECHOS`)
unique(fgj$`HORA DE HECHOS`)
grep("9.", fgj$`HORA DE HECHOS`)
t <- grep("9.", fgj$`HORA DE HECHOS`)
fgj[t,]
t <-as.data.frame(fgj[t,])
View(t)
unique(t$`HORA DE HECHOS`)
pbajas <- fread("/home/jfractal/Documentos/SEMOVI/trabajos/fotocivicas/bajas.csv")
View(pbajas)
foraneas <- fread("/home/jfractal/Documentos/SEMOVI/trabajos/fotocivicas/fotocivicas_placas_foraneo_2020_2021.csv")
View(foraneas)
foraneas <- foraneas[,-1]
View(foraneas)
View(pbajas)
View(foraneas)
View(foraneas)
foraneas <- fread("/home/jfractal/Documentos/SEMOVI/trabajos/fotocivicas/fotocivicas_placas_foraneo_2020_2021.csv")
View(pbajas)
foraneas <- foraneas[,5]
b <- merge(pbajas, foraneas, by = "placa")
View(b)
b1 <- as.data.frame(pbajas%in%foraneas$placa)
View(b1)
b1 <- as.data.frame(pbajas$placa%in%foraneas$placa)
View(b1)
View(b1)
b1 <- b1%>%filter(b1$`pbajas$placa %in% foraneas$placa` == "TRUE")
foraneas <- distinct(foraneas, placa, .keep_all = T)
b1 <- merge(pbajas, foraneas, by = "placa")
pbajas <- fread("/home/jfractal/Documentos/SEMOVI/trabajos/fotocivicas/bajas.csv")
foraneas <- fread("/home/jfractal/Documentos/SEMOVI/trabajos/fotocivicas/fotocivicas_placas_foraneo_2020_2021.csv")
foraneas <- foraneas[,5]
foraneas <- distinct(foraneas, placa, .keep_all = T)
b1 <- merge(pbajas, foraneas, by = "placa")
library(pacman)
p_load(tidyverse, janitor, qdap)
df <- read_excel("/home/jfractal/Documentos/SEMOVI/trabajos/alcoholimetro/base_alcoholimetro_19_21.xlsx")
vGrep <- Vectorize(grep, vectorize.args = "pattern", SIMPLIFY = FALSE)
año <- c("2019", "2020", "2021")
a2 <- unlist(vGrep(año, df$fecha ))
df1 <- df[a2,]
df1 <- df1%>%mutate(ao = ifelse(grepl("2019", df1$fecha), "2019",
ifelse(grepl("2020",df1$fecha ), "2020",
ifelse(grepl("2021", df1$fecha), "2021", "no" ) )))
df1$mes <- tolower(df1$mes)
df1$folio_de_infraccion <- tolower(df1$folio_de_infraccion)
df1$folio_de_infraccion <- gsub("(^[[:space:]]+|[[:space:]]+$)", "", df1$folio_de_infraccion)
df2 <- df1%>%filter((folio_de_infraccion != "sin infractores"))##datos a utilzar
########---------------------------------------------------------------------
total_jornadas <- df2%>%distinct(no_jornada, .keep_all = T)
total_jornadas1 <- dcast(total_jornadas, ao~mes, margins = T)
#######-------------------------------------------------------------------------
total_infractores <- dcast(df1, ao~mes, margins = T)
patron <- c("N/P", "NN/P", "NO  PRESENTO", "NO  PROPORCIONA","NO HAY", "NO P´RESENTO", "NO PRENSETO",
"NO PRERSENTO","NO PRESENTA", "NO PRESENTO", "No presneto", "NO PROPORCIONA", "NO PROPORCIONO", "NO PRPOPORCIONA" )
df2$tipo_licencia <- mgsub(pattern = patron, replacement = "NP", df2$tipo_licencia)
tipo_licencia <- dcast(df2, ao~tipo_licencia, margins = T)
unique(df2$sexo)
df2$sexo <- ifelse(df2$sexo == "FEMENINO" |
df2$sexo == "FEMENINA" |
df2$sexo == "FEMINA" |
df2$sexo == "FEMININO" |
df2$sexo == "FEMENO" |
df2$sexo == "Femenino", "Mujer", "Hombre")
total_sexo <- dcast(df2, ao~sexo, margins = T)
View(total_sexo)
#-----------------------------------------------------------------------------
df2$rango_edad <- ifelse(df2$edad < 18, "Menos de 18",
ifelse(df2$edad >=18 & df2$edad < 30, "18 a 29",
ifelse(df2$edad >=30 & df2$edad < 46, "30 a 45",
ifelse(df2$edad >=45 & df2$edad < 61, "45 a 69", "Mayor de 61" ))))
total_edad <- dcast(df2, rango_edad~ao, margins = T)
unique(df2$alcaldia)
df2$alcaldia <- chartr("ÁÉÍÓÚáéíóú.", "AEIOUaeiou.", toupper(df2$alcaldia))
df2$alcaldia <- str_replace(df2$alcaldia, "GUSTAVO A. MADERO", "GUSTAVO A MADERO")
df2$alcaldia <- str_replace(df2$alcaldia,"GISTAVO A. MADERO" , "GUSTAVO A MADERO")
df2$alcaldia <- str_replace(df2$alcaldia,"BENITO JUAREZ." , "BENITO JUAREZ")
df2$alcaldia <- str_replace(df2$alcaldia,"BENITO JUÀREZ" , "BENITO JUAREZ")
df2$alcaldia <- str_replace(df2$alcaldia,"BENITO JUÀREZ" , "BENITO JUAREZ")
df2$alcaldia <- str_replace(df2$alcaldia, "CUAUHTEMOC.", "CUAUHTEMOC")
df2$alcaldia <- str_replace(df2$alcaldia,"CUAHTEMOC", "CUAUHTEMOC")
df2$alcaldia <- str_replace(df2$alcaldia,"CUAUTEMOC", "CUAUHTEMOC")
df2$alcaldia <- str_replace(df2$alcaldia,"CUAJIMAPA", "CUAJIMALPA" )
df2$alcaldia <- str_replace(df2$alcaldia,"XOCHILIMCO" , "XOCHIMILCO" )
df2$alcaldia <- str_replace(df2$alcaldia,"MIGUEL HIGALGO" , "MIGUEL HIDALGO" )
df2$alcaldia <- str_replace(df2$alcaldia,"MIGUEL HIDALGO." , "MIGUEL HIDALGO" )
df2$alcaldia <- str_replace(df2$alcaldia,"IZTTAPALAPA" , "IZTAPALAPA"  )
df2$alcaldia <- str_replace(df2$alcaldia,"TLAPAN"  , "TLALPAN" )
df2$alcaldia <- str_replace(df2$alcaldia,"VENUSTIANO  CARRANZA" , "VENUSTIANO CARRANZA" )
total_alcaldias <- dcast(df2, alcaldia~ao, margins = T)
unique(df2$tipo_de_vehiculo)
df2$tipo_de_vehiculo <- ifelse(substring(df2$tipo_de_vehiculo,1,1)=="A","AUTOMOVIL PARTICULAR",
ifelse(substring(df2$tipo_de_vehiculo,1,3)=="PAR","AUTOMOVIL PARTICULAR",
ifelse(substring(df2$tipo_de_vehiculo,1,4)=="CLAS","AUTOMOVIL PARTICULAR",
ifelse(substring(df2$tipo_de_vehiculo,1,3)=="MOT","MOTOCICLETA",
ifelse(grepl("PUBLICO",df2$tipo_de_vehiculo ),"TRANSPORTE PUBLICO",df2$tipo_de_vehiculo       )))))
unique(df2$tipo_de_vehiculo)
df2$tipo_de_vehiculo <- ifelse(substring(df2$tipo_de_vehiculo,1,1)=="A","AUTOMOVIL PARTICULAR",
ifelse(substring(df2$tipo_de_vehiculo,1,3)=="PAR","AUTOMOVIL PARTICULAR",
ifelse(substring(df2$tipo_de_vehiculo,1,4)=="CLAS","AUTOMOVIL PARTICULAR",
ifelse(substring(df2$tipo_de_vehiculo,1,3)=="MOT","MOTOCICLETA",
ifelse(grepl("PUBLICO",df2$tipo_de_vehiculo ),"TRANSPORTE PUBLICO",
ifelse(grepl("COMBI", df2$tipo_de_vehiculo),"TRANSPORTE PUBLICO",
ifelse(grepl("MICRO", df2$tipo_de_vehiculo),"TRANSPORTE PUBLICO",
ifelse(grepl("COLECTIVO", df2$tipo_de_vehiculo),"TRANSPORTE PUBLICO", df2$tipo_de_vehiculo  ))))))))
unique(df2$tipo_de_vehiculo)
excel_numeric_to_date(44220)
### Carga de librer?as
library(tidyverse)
library(readxl)
library(stringi)
library(stringr)
library(janitor)
library(reshape2)
library(WriteXLS)
library(validate)
library(data.table)
library(lubridate)
library(enc)
library(splitstackshape)
library(hms)
### Carga la base de datos------------------------------------------------------
fgj <- fread("/home/jfractal/Documentos/SEMOVI/bases de datos/FGJ/2021/fgj_enero_junio_2021_.csv")
fgj <- clean_names(fgj)
unique(fgj$fecha_de_hechos)
View(fgj)
excel_numeric_to_date(44220)
t <- as.data.frame(fecha = c("44220", "44221", "2021-01-27"))
t <- data.frame(fecha = c("44220", "44221", "2021-01-27"))
View(t)
class(t$fecha)
ifelse(substring(t$fecha,1,1)== "4", excel_numeric_to_date(as.numeric(as.character(t$fecha))), t$fecha   )
t$fecha <- as.character(t$fecha)
View(t)
ifelse(substring(t$fecha,1,1) == "4", excel_numeric_to_date(as.numeric(as.character(t$fecha))), t$fecha   )
ifelse(substring(t$fecha,1,1) == "4", excel_numeric_to_date(as.numeric(t$fecha)), t$fecha   )
ifelse(substring(t$fecha,1,1) == "4", excel_numeric_to_date((t$fecha)), t$fecha   )
ifelse(substring(t$fecha,1,1) == "4", excel_numeric_to_date(as.numeric(t$fecha)), t$fecha   )
t <- data.frame(fecha = c("44220", "44221", "2021-01-27"))
t$fecha <- as.character(t$fecha)
ifelse(substring(t$fecha,1,1) == "4", excel_numeric_to_date(as.numeric(t$fecha)), t$fecha   )
ifelse(substring(t$fecha,1,1) == "4", excel_numeric_to_date(as.numeric(t$fecha),date_system = "modern" ), t$fecha   )
t <- data.frame(fecha = c("44220", "44221", "2021-01-27"))
t$fecha <- as.character(t$fecha)
ifelse(substring(t$fecha,1,1) == "4", excel_numeric_to_date(as.numeric(t$fecha),date_system = "modern" ), t$fecha   )
ifelse(substring(t$fecha,1,1) == "4", excel_numeric_to_date(as.numeric(t$fecha),date_system = "modern" ), t$fecha   )
ifelse(substring(t$fecha,1,1) == "4", as.Date.numeric( as.numeric(t$fecha), origin = "1900-01-01"), t$fecha  )
t <- data.frame(fecha = c("44220", "44221", "2021-01-27"))
t$fecha <- as.character(t$fecha)
ifelse(substring(t$fecha,1,1) == "4", as.Date.numeric( as.numeric(t$fecha), origin = "1900-01-01"), t$fecha  )
as.Date.numeric(t$fecha)
as.Date.numeric(t$fecha, origin = "1900-01-01")
ifelse(substring(t$fecha,1,1) == "4", t$fecha, "no")
ifelse(substring(t$fecha,1,1) == "4", as.numeric(t$fecha), "no")
ifelse(substring(t$fecha,1,1) == "4", excel_numeric_to_date( as.numeric(t$fecha) ), "no")
fun_excel_date <- function(x){
if( substring(x,1,1)=="4"){
excel_numeric_to_date(as.numeric(
as.character(x)
), date_system = "modern")}
else {
return(x)
}
}
do.call(c, lapply(t$fecha, fun_excel_date))
ifelse(substring(t$fecha,1,1) == "4", excel_numeric_to_date( as.numeric( as,character( t$fecha)) ), "no")
t <- data.frame(fecha = c("44220", "44221", "2021-01-27"))
ifelse(substring(t$fecha,1,1) == "4", excel_numeric_to_date( as.numeric( as,character( t$fecha)) ), "no")
t <- data.frame(fecha = c("44220", "44221", "2021-01-27"))
t$fecha <- as.character(t$fecha)
ifelse(substring(t$fecha,1,1) == "4", as.Date.numeric( as.numeric(t$fecha), origin = "1900-01-01"), t$fecha  )
t <- data.frame(fecha = c("44220", "44221", "2021-01-27"))
ifelse(substring(t$fecha,1,1) == "4", as.Date.numeric( as.numeric( as.character(t$fecha)), origin = "1900-01-01"), t$fecha  )
fun_excel_date <- function(x){
if( substring(x,1,1)=="4"){
excel_numeric_to_date(as.numeric(
as.character(x)
), date_system = "modern")}
else {
return(NA)
}
}
do.call(c, lapply(t$fecha, fun_excel_date))
ifelse(substring(t$fecha,1,1) == "4",excel_numeric_to_date(as.numeric(as.character(t$fecha)), date_system = "modern") , "no")
t <- data.frame(fecha = c("44220", "44221", "2021-01-27"))
ifelse(substring(t$fecha,1,1) == "4",excel_numeric_to_date(as.numeric(as.character(t$fecha)), date_system = "modern") , "no")
excel_numeric_to_date(t$fecha)
excel_numeric_to_date(as.numeric(t$fecha))
excel_numeric_to_date(as.numeric(t$fecha), dat, date_system = "modern")
excel_numeric_to_date(as.numeric(t$fecha),  date_system = "modern")
t <- data.frame(fecha = c("44220", "44221", "2021-01-27"))
t$fecha <- as.character(t$fecha)
excel_numeric_to_date(as.numeric(t$fecha),  date_system = "modern")
ifelse(substring(t$fecha,1,1) == "4",excel_numeric_to_date(as.numeric(t$fecha),  date_system = "modern") , "no")
ifelse(substring(t$fecha,1,1) == "4", as.Date(t$fecha, format = "%Y%m%d"), t$fecha)
ifelse(substring(t$fecha,1,1) == "4", as.Date(as.character(t$fecha), format = "%Y%m%d"), t$fecha)
ifelse(substring(t$fecha,1,1) == "4", strptime(as.character(t$fecha), format = "%Y%m%d"), t$fecha)
ifelse(substring(t$fecha,1,1) == "4", strptime(as.numeric(t$fecha), format = "%Y%m%d"), t$fecha)
t <- data.frame(fecha = c("44220", "44221", "2021-01-27"))
t$fecha <- as.character(t$fecha)
ifelse(substring(t$fecha,1,1) == "4", strptime(as.numeric(t$fecha), format = "%Y%m%d"), t$fecha)
ifelse(substring(t$fecha,1,1) == "4",ymd(as.numeric(t$fecha)), t$fecha)
ymd(t$fecha)
ymd(as.numeric(t$fecha))
transform(df, t$fecha = as.Date(as.character(t$fecha), "%Y%m%d"))
transform(t, fecha = as.Date(as.character(fecha), "%Y%m%d"))
as.integer(format(as.Date(t$fecha), "%Y%m%d"))
as.integer(format(as.Date(t$fecha), "%Y%m%d"))
as.Date(as.numeric(as.character(t$fecha)), origin = "1899-12-30")
ifelse(substring(t$fecha,1,1)=="4", as.Date(as.numeric(as.character(t$fecha)), origin = "1899-12-30"),"no"  )
ifelse(substring(t$fecha,1,2) != "20",excel_numeric_to_date(as.numeric(t$fecha),  date_system = "modern") , "no")
excel_numeric_to_date(as.numeric(t$fecha),  date_system = "modern")
convert_to_date(t$fecha)
t <- data.frame(fecha = c("44220", "44221", "2021-01-27"))
convert_to_date(t$fecha)
convert_to_date(t$fecha)
t <- data.frame(fecha = c("44220", "44221", "2021-01-27"))
convert_to_date(t$fecha)
t <- data.frame(fecha = c("44220", "44221", "01-27-2021"))
convert_to_date(t$fecha)
t <- data.frame(fecha = c("44220", "44221", "01/27/2021"))
convert_to_date(t$fecha)
t <- data.frame(fecha = c("44220", "44221", "2021-03-25"))
convert_to_date(t$fecha)
x <- 03/03/2020
x
x <- as.Date(03/03/2020)
x <- dmy(03/03/2020)
x <- as.character(x)
x <- 03/03/2020
x <- as.character(03/03/2020)
x <- as.Date.character(03/03/2020)
t <- data.frame(fecha = c("44220", "44221", "03/03/2021"))
View(t)
ifelse(substring(t$fecha,7,8)!="20", convert_to_date(t$fecha),t$fecha)
ifelse(substring(t$fecha,3,3)!="/", convert_to_date(t$fecha),t$fecha)
ifelse(substring(t$fecha,3,3)!="/", t$fecha, "no")
ifelse(substring(t$fecha,1,1)=="4", t$fecha, "no")
t <- data.frame(fecha = c("44220", "44221", "03/03/2021"))
ifelse(substring(t$fecha,1,1)=="4", t$fecha, "no")
t$fecha <- as.character(t$fecha)
ifelse(substring(t$fecha,1,1)=="4", t$fecha, "no")
ifelse(substring(t$fecha,1,1)=="4", convert_to_date(t$fecha), "no")
dmy(t$fecha)
ifelse(substring(t$fecha,3,3)=="/", dmy(t$fecha), t$fecha)
t$fecha <- as.character(t$fecha)
t$fecha<- ifelse(substring(t$fecha,3,3)=="/", dmy(t$fecha), t$fecha)
View(t)
convert_to_date(t$fecha)
View(t)
t <- data.frame(fecha = c("44220", "44221", "03/03/2021"))
dmy(t$fecha)
t <- data.frame(fecha = c("44220", "44221", "03/03/2021"))
t$fecha <- as.character(t$fecha)
dmy(t$fecha)
t <- data.frame(fecha = c("44220", "44221", "03/03/2021"))
t$fecha<- ifelse(substring(t$fecha,3,3)=="/", dmy(t$fecha), t$fecha)
View(t)
t <- data.frame(fecha = c("44220", "44221", "03/03/2021"))
t$fecha <- as.character(t$fecha)
t$fecha<- ifelse(substring(t$fecha,3,3)=="/", dmy(t$fecha), t$fecha)
View(t)
excel_numeric_to_date(as.numeric(t$fecha),  date_system = "modern")
excel_numeric_to_date(as.numeric(t$fecha),  date_system = "mac pro2011")
excel_numeric_to_date(as.numeric(t$fecha))
as.Date.numeric(t$fecha, origin = "1900-01-01")
t <- data.frame(fecha = c("44220", "44221", "03/03/2021"))
t$fecha <- as.character(t$fecha)
t$fecha<- ifelse(substring(t$fecha,3,3)=="/", dmy(t$fecha), t$fecha)
View(t)
as.Date.numeric(t$fecha, origin = "1900-01-01")
t <- data.frame(fecha = c("44220", "44221", "03/03/2021"))
t$fecha <- as.character(t$fecha)
ifelse(substring(t$fecha,1,1)=="4", convert_to_date(t$fecha), "no")
View(t)
View(t)
ifelse(substring(t$fecha,1,1)=="4", convert_to_date(t$fecha), "no")
ifelse(substring(t$fecha,1,1)!="4",t$fecha, convert_to_date(t$fecha),)
ifelse(substring(t$fecha,1,1)!="4",t$fecha, convert_to_date(t$fecha))
ifelse(substring(t$fecha,1,1)=="4",t$fecha, convert_to_date(t$fecha))
ifelse(substring(t$fecha,3,3)=="/",t$fecha, convert_to_date(t$fecha))
t <- data.frame(fecha = c("44220", "44221", "03-03-2021"))
View(t)
t$fecha <- as.character(t$fecha)
ifelse(substring(t$fecha,3,3)=="/",t$fecha, convert_to_date(t$fecha))
dmy(t$fecha)
t$fecha<- ifelse(substring(t$fecha,3,3)=="/", dmy(t$fecha), t$fecha)
ifelse(substring(t$fecha,3,3)=="/",t$fecha, convert_to_date(t$fecha))
t$fecha<- ifelse(substring(t$fecha,3,3)=="/", dmy(t$fecha), t$fecha)
View(t)
t$fecha<- ifelse(substring(t$fecha,3,3)=="-", dmy(t$fecha), t$fecha)
View(t)
library(data.table)
library(tidyverse)
df<- fread("/home/jfractal/Documentos/SEMOVI/trabajos/alcoholimetro/analisis_alcoholimetro_INCIFO_19_21.R")
View(df)
require(pacman)
p_load(foreign, tidyverse, tigris,dplyr,haven,ggplot2,readr,data.table,lubridate,chron,plyr,extrafont,rgdal,questionr,readxl,foreign, janitor)
df <- read.csv("/home/jfractal/Documentos/dataton_2021/dataton_AGUA_2021/pozos_sacmex.csv", encoding = "UTF-8")
View(df)
cambio_coord <- function(x, y){
utm1 <- data.frame(X=x,Y=x)
utm1[1] <- ifelse(is.na(x),0, x)
utm1[2] <- ifelse(is.na(y),0, y)
utm1 <- utm1[complete.cases(utm1),]
coordinates(utm1) <- ~X+Y
proj4string(utm1) <- CRS("+proj=utm +zone=14 +datum=WGS84 +units=m +ellps=WGS84")
utm1 <- spTransform(utm1,CRS("+proj=longlat +datum=WGS84"))
coords <-  as.data.frame(utm1@coords)
return(coords)
}
geo <- as.data.frame(cambio_coord(df$X, df$Y))
View(geo)
df$geo_x <- geo$X
df$geo_y <- geo$Y
View(df)
setwd("/home/jfractal/Documentos/dataton_2021/dataton_AGUA_2021")
write.csv(df, "pozosCdmx.csv")
View(df)
uniqeu(df$DELEGACION)
unique(df$DELEGACION)
